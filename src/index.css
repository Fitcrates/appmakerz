/* Critical CSS - Load this first */
@font-face {
  font-family: 'Plus Jakarta Sans';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local('Plus Jakarta Sans'),
       url('/fonts/PlusJakartaSans-Regular.woff2') format('woff2');
}

@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
}

html, body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  width: 100%;
  box-sizing: border-box;
  font-family: 'Plus Jakarta Sans', system-ui, -apple-system, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}

*, *::before, *::after {
  box-sizing: inherit;
}

.fixed-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: url('./media/tinypng-cropedbackground-min.webp') no-repeat center center;
  background-size: cover;
  z-index: -1;
}

/* Ensure hero-section remains above the background */
.hero-section {
  position: relative;
  z-index: 1;
}
/* iOS-specific fixes */
.ios-main {
  position: relative;
  z-index: 1;
}

.bg-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
}

.ios-bg-wrapper {
  position: absolute;
  height: 100vh;
  /* Prevent background stretching on iOS */
  background-size: cover;
  background-attachment: scroll;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  /* Force hardware acceleration */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  perspective: 1000;
}

.ios-section {
  /* Ensure proper rendering on iOS */
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  /* Prevent unwanted stretching */
  height: 100vh;
  /* Use viewport units for iOS */
  height: -webkit-fill-available;
}

/* Force proper aspect ratio on iOS */
@supports (-webkit-touch-callout: none) {
  .fixed-bg {
    background-attachment: scroll;
    /* Maintain aspect ratio */
    aspect-ratio: 16/9;
    min-height: 100vh;
    min-height: -webkit-fill-available;
  }
}

/* Mobile-first media queries */
@media screen and (max-width: 767px) {
  .hero-heading {
    font-size: 2rem;
    line-height: 1.2;
    /* Reduce text-shadow complexity on mobile */
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
}

/* Desktop styles */
@media screen and (min-width: 768px) {
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fadeIn {
    animation: fadeIn 0.3s ease-in forwards;
  }
}

/* Mobile Optimizations */
@media screen and (max-width: 767px) {
  section.hero-section {
    padding-bottom: 2rem;
  }
  

*, *::before, *::after {
  box-sizing: inherit;
}

/* Hero Section */
.hero-section {
  position: relative;
  overflow: hidden;
  isolation: isolate;
  background-attachment: fixed;
  background-image: url('../public/media/tinypng-cropedbackground-min.webp');
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

/* iOS Safari specific styles */
@supports (-webkit-touch-callout: none) {
  .hero-section {
    background-attachment: scroll;
  }
}

.hero-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
  z-index: -1;
  pointer-events: none;
}

.hero-section > div {
  position: relative;
  z-index: 1;
}

/* Mobile-first media queries */
@media screen and (max-width: 767px) {
  .hero-heading {
    font-size: 2rem;
    line-height: 1.2;
    /* Reduce text-shadow complexity on mobile */
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }
}

/* Desktop styles */
@media screen and (min-width: 768px) {
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fadeIn {
    animation: fadeIn 0.3s ease-in forwards;
  }
}

/* Mobile Optimizations */
@media screen and (max-width: 767px) {
  section.hero-section {
    padding-bottom: 2rem;
  }
  
  h1 {
    font-size: 1.25rem;
    line-height: 1.3;
  }
}

/* Text Shadows */
.text-shadow-fuchsia {
  text-shadow: 0 0 15px rgba(255, 0, 255, 0.8), 0 0 25px rgba(255, 0, 255, 0.6);
}

.text-shadow-sky {
  text-shadow: 0 0 15px rgba(0, 191, 255, 0.8), 0 0 25px rgba(0, 191, 255, 0.6);
}

.text-shadow-green {
  text-shadow: 0 0 15px rgba(0, 255, 0, 0.8), 0 0 25px rgba(0, 255, 0, 0.6);
}

.text-shadow {
  text-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

/* Gradient Shadows */
.gradient-shadow {
  box-shadow: 0 0 15px 5px rgba(128, 0, 128, 0.4),
              0 0 25px 10px rgba(128, 0, 128, 0.3);
  transition: all 0.3s ease-in-out;
}

.gradient-shadow:hover {
  box-shadow: 0 0 20px 10px rgba(128, 0, 128, 0.6),
              0 0 30px 15px rgba(128, 0, 128, 0.5);
}

/* Keyframes for Spinning Animation */
@keyframes spin-gradient {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Spinning Gradient Border */
.spin-gradient {
  position: absolute;
  z-index: 0;
  background: conic-gradient(#4f46e5, #0ea5ff, #9333ea, #4f46e5);
  animation: spin-gradient 2s linear infinite;
  border-radius: inherit;
  inset: 0;
}

/* Text Alignment */
.text-justify-tight {
  text-align: justify;
  text-align-last: justify;
}

h1 {
  font-size: 1.5rem;
  font-weight: bold;
  margin-top: 1rem;
}

strong {
  font-weight: bold;
}

.hover-text-shadow {
  transition: text-shadow 0.3s ease, color 0.3s ease;
}

.hover-text-shadow:hover {
  text-shadow: 0px 8px 12px rgba(13, 148, 136, 0.6);
}

/* Form Input Optimizations */
input:-webkit-autofill,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:focus {
  transition: background-color 5000s ease-in-out 0s;
  -webkit-text-fill-color: inherit !important;
  box-shadow: 0 0 0px 1000px transparent inset !important;
}

/* Animation Optimizations */
.hover-bounce {
  display: inline-block;
  transition: transform 0.3s ease;
  will-change: transform;
}

.hover-bounce:hover {
  animation: bounce 0.5s infinite;
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

.animated-word {
  display: inline-block;
  animation: bounceRotate 8s infinite;
  will-change: transform;
}

@keyframes bounceRotate {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
  }
  50% {
    transform: translateY(0) rotate(30deg);
  }
  75% {
    transform: translateY(0) rotate(-30deg);
  }
}

/* Hero Text */
.hero-heading {
  color: white;
  margin: 0;
  padding: 0;
  line-height: 1.2;
  font-weight: 400;
  opacity: 0;
  animation: fadeIn 0.3s ease-in forwards;
  text-align: center;
}

@media (min-width: 768px) {
  .hero-heading {
    text-align: left;
  }
}

/* Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Headings */
h2, h3, h4, h5, h6 {
  font-family: 'Plus Jakarta Sans', Arial, sans-serif;
  font-weight: 700;
  margin: 0;
}

/* Global Reset */
*, *::before, *::after {
  box-sizing: inherit;
}

/* Hero Section */
section.hero-section > div {
  position: relative;
  z-index: 1;
}

/* Heading Container */
.heading-container {
  contain: layout style paint;
  position: relative;
  width: 100%;
  max-width: 100vw;
  overflow-x: hidden;
  transform: translateZ(0);
}

@media screen and (max-width: 640px) {
  .heading-container {
    contain: strict;
  }
  
  .heading-container h1 {
    word-break: break-word;
    hyphens: auto;
    overflow-wrap: break-word;
  }
}

/* Ensure content stays above background */
.relative {
  position: relative;
  z-index: 1;
}

main {
  position: relative;
  z-index: 1;
  background: transparent;
}

/* Navigation buttons styling */
.swiper-navigation-buttons {
  display: none;
  position: relative;
  z-index: 20;
  margin-top: 1rem;
}

@media (min-width: 1024px) {
  .swiper-navigation-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
  }
}

.swiper-button-prev,
.swiper-button-next {
  position: static !important;
  width: 22px !important;
  height: 22px !important;
  margin: 0 !important;
  padding: 8px !important;
  color: white !important;
  transform: none !important;
  cursor: pointer !important;
  z-index: 20 !important;
}

.swiper-button-prev:hover,
.swiper-button-next:hover {
  color: rgb(94 234 212) !important;
}

.swiper-button-prev::after,
.swiper-button-next::after {
  font-size: 16px !important;
  font-weight: bold !important;
}

/* Remove any previous display: none that might be affecting the buttons */
.swiper-button-prev,
.swiper-button-next {
  display: block !important;
}

/* Custom Swiper container styles */
.custom-swiper {
  padding: 1rem !important;
  margin: -1rem !important;
  overflow: hidden !important;
}

/* Ensure pagination is visible */
.swiper-pagination {
  position: relative !important;
  bottom: 0 !important;
  margin-top: 1rem !important;
  z-index: 20 !important;
}

.swiper-pagination-bullet {
  background-color: #5eead4 !important; /* teal-300 */
  opacity: 0.5;
}

.swiper-pagination-bullet-active {
  background-color: #5eead4 !important; /* teal-300 */
  opacity: 1;
}

/* Style Swiper navigation buttons */
.swiper-button-prev,
.swiper-button-next {
  position: static !important;
  color: white !important;
  margin: 0 !important;
  transform: none !important;
}

.swiper-button-prev:hover,
.swiper-button-next:hover {
  color: rgb(94 234 212) !important; /* teal-400 */
}

/* Container for navigation buttons */
.swiper-navigation-buttons {
  display: none;
}

@media (min-width: 1024px) {
  .swiper-navigation-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    margin-top: 0.5rem;
  }
}

/* Custom Swiper container styles */
.custom-swiper {
  padding: 1rem !important;
  margin: -1rem !important;
  overflow: hidden !important;
}

.swiper-slide {
  height: auto !important;
}
.custom-swiper button {
  position: relative;
  z-index: 10; /* Ensure buttons are on top */
}

/* Ensure container doesn't get cut off on mobile */
@media (max-width: 640px) {
  .custom-swiper {
    padding: 0.5rem !important;
    margin: -0.5rem !important;
  }
}

/* Sanity Studio Root Styling */
.sanity-studio {
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}
.sanity-studio [data-ui="PortableTextInput"] p {
  word-break: keep-all;
  hyphens: auto;
}
.sanity-studio [data-ui="TextArea"], 
.sanity-studio [data-ui="PortableTextInput"] p {
  white-space: normal;
  word-spacing: -0.15em; /* Adjusts spacing to pull small words closer */
}




/* Animated button edge */
.buttonHero {
  position: relative;
  z-index: 1;
  overflow: visible; /* Ensure the pseudo-elements don't overflow */
  border-radius: 9999px; /* Tailwind's rounded-full equivalent */
}

@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.buttonHero::after,
.buttonHero::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  filter: blur(2px); /* Disable for clean border */
  transform: translate(-50%, -50%);
  width: calc(100% + 3px); /* Account for padding */
  height: calc(100% + 3px); /* Account for padding */
  background-image: conic-gradient(
    from var(--angle),
    /* adjust to change gradient */
    #29E7CD,
    #29E7CD,  
    #29E7CD,
    #a30ee9,
    #a30ee9
  );
  z-index: -1;
  border-radius: 9999px; /* Tailwind's rounded-full equivalent */
  animation: 4s spin linear infinite;
}

.buttonHero::before {
  filter: blur(0.5rem);
  opacity: 0.5;
}

@keyframes spin {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}

/* Neon button with Tailwind Teal-300 colors */
.buttonNeon {
  --glow-color: #29E7CD; /* Tailwind Teal-300, outer color */
  --glow-spread-color: rgba(41, 231, 205, 0.6); /* Soft glow */
  --enhanced-glow-color: rgb(18, 70, 58); /* Darker teal for depth, inner color */
  --btn-color: rgb(13, 56, 46); /* Deep teal-green background, inner color */

  border: 0.25em solid var(--glow-color);
  padding: 1em 3em;
  color: var(--glow-color);
  font-size: 15px;
  font-weight: bold;
  background-color: var(--btn-color);
  border-radius: 10em;
  outline: none;
  box-shadow:
    0 0 1em 0.25em var(--glow-color),
    0 0 4em 1em var(--glow-spread-color),
    inset 0 0 0.75em 0.25em var(--glow-color);
  text-shadow: 0 0 0.5em var(--glow-color);
  position: relative;
  transition: all 0.3s ease-in-out;
}

.buttonNeon::after {
  pointer-events: none;
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 150%;
  width: 150%;
  background-color: var(--glow-spread-color);
  filter: blur(2em);
  opacity: 0.7;
  z-index: -1;
  border-radius: 1em;
}

/* Hover effect: Invert colors for a cool interactive glow */
.buttonNeon:hover {
  color: var(--btn-color);
  background-color: var(--glow-color);
  box-shadow:
    0 0 1.2em 0.3em var(--glow-color),
    0 0 4.5em 2.5em var(--glow-spread-color),
    inset 0 0 0.75em 0.25em var(--glow-color);
}

/* Active (Click) effect: Softer glow */
.buttonNeon:active {
  box-shadow:
    0 0 0.6em 0.25em var(--glow-color),
    0 0 3em 2em var(--glow-spread-color),
    inset 0 0 0.5em 0.25em var(--glow-color);
}


/* Parallelogram Neon Button */
.Parallelogram {
  --glow-color: #29E7CD; /* Tailwind Teal-300 */
  --glow-spread-color: rgba(41, 231, 205, 0.6);
  --enhanced-glow-color: rgb(18, 70, 58);
  --btn-color: rgb(0, 0, 0);

  border: 0.15em solid var(--glow-color);
  padding: 0.5rem 0.75rem;
  color: var(--glow-color);
  font-size: 16px;
  font-weight: bold;
  background-color: var(--btn-color);
  outline: none;
  text-shadow: 0 0 0.5em var(--glow-color);
  position: relative;
  transition: all 0.3s ease-in-out;

  /* Parallelogram effect */
  display: inline-flex;
  transform: none;
  border-radius: 20px 20px 20px 20px; /* Rounded on one side, sharp on the other (may adjust) */

  box-shadow:
    0 0 1em 0.25em var(--glow-color),
    0 0 3em 0.5em var(--glow-spread-color),
    inset 0 0 0.75em 0.25em var(--glow-color);
}

/* Reset skew on text inside */
.Parallelogram span {
  display: inline-block;
  transform: none;
}

/* Glowing effect */
.Parallelogram::after {
  pointer-events: none;
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 100%;
  width: 100%;
  background-color: var(--glow-spread-color);
  filter: blur(1em);
  opacity: 0.7;
  z-index: -1;
  border-radius: 100px 100px 100px 100px;
}

/* Hover effect */
.Parallelogram:hover {
  color: var(--btn-color);
  background-color: var(--glow-color);
  box-shadow:
    0 0 1.2em 0.3em var(--glow-color),
    0 0 2.5em 1.5em var(--glow-spread-color),
    inset 0 0 0.75em 0.25em var(--glow-color);
}

/* Active effect */
.Parallelogram:active {
  box-shadow:
    0 0 0.6em 0.25em var(--glow-color),
    0 0 3em 2em var(--glow-spread-color),
    inset 0 0 0.5em 0.25em var(--glow-color);
}





/* GlowButton */
.GlowButton {
  --glow-color: #29E7CD; /* Tailwind Teal-300 */
  --glow-spread-color: rgba(41, 231, 205, 0.6);
  --btn-color: rgba(0, 0, 0, 0.1); /* Black background */

  border: 0.15em solid var(--glow-color); /* Border color */
  padding: 0.5rem 0.75rem;
  color: var(--glow-color);
  font-size: 16px;
  font-weight: bold;
  background-color: var(--btn-color);
  outline: none;
  text-shadow: none; /* No text shadow by default */
  position: relative;
  transition: all 0.3s ease-in-out;
  display: inline-flex;
  border-radius: 20px; /* Rounded corners */
  box-shadow: none; /* No shadow by default */
}

/* Glowing effect (hidden by default) */
.GlowButton::after {
  pointer-events: none;
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 100%;
  width: 100%;
  background-color: var(--glow-spread-color);
  filter: blur(1em);
  opacity: 0; /* Hidden by default */
  z-index: -1;
  border-radius: 20px; /* Match button border radius */
  transition: opacity 0.3s ease-in-out; /* Smooth transition */
}

/* Hover effect */
.GlowButton:hover {
  color:#140F2D;/* Text color changes on hover */
  background-color: var(--glow-color); /* Background color changes on hover */
  
  box-shadow:
    0 0 1.2em 0.5em var(--glow-color), /* Outer glow */
    0 0 1em 0.5em var(--glow-spread-color), /* Spread glow */
    inset 0 0 0.15em 0.15em var(--glow-color); /* Inner glow */
  text-shadow: 0 0 0.5em var(--glow-color); /* Text glow */
}

/* Show glow effect on hover */
.GlowButton:hover::after {
  opacity: 0.7; /* Show glow effect */
}

/* Active effect */
.GlowButton:active {
  box-shadow:
    0 0 0.6em 0.25em var(--glow-color),
    0 0 3em 2em var(--glow-spread-color),
    inset 0 0 0.5em 0.25em var(--glow-color);
}
